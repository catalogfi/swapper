name: Tests Analysis

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Docker Desktop
        run: |
          sudo apt-get update
          sudo apt-get install \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io

      - name: Start Docker
        run: sudo service docker start

      - name: Install and run Nigiri
        run: |
          curl https://getnigiri.vulpem.com | bash
          nigiri start

      - name: Install Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install Project Dependencies
        run: yarn install
  
      - name: Run Bitcoin Tests
        run: npx hardhat test test/AtomicSwapB.ts

      - name: Run Ethereum Tests
        run: npx hardhat test test/AtomicSwapE.ts

      - name: Integration Tests
        run: npx hardhat test test/AtomicSwap.ts

  build2:
    runs-on: ubuntu-latest
    container: pull backpackapp/build:v0.28.0

    steps:
      - uses: actions/checkout@v3
      - name: List rustup toolchains
        run: rustup toolchain list
      - name: Set default toolchain
        run: rustup default stable
      - name: List rustup toolchains
        run: rustup toolchain list
      - name: Generate new keygen
        run: solana-keygen new
      - name: Set solana target cluster to local
        run: solana config set --url http:localhost:8899
      - name: Check solana config
        run: solana config get
      - name: Install yarn dependencies
        run: yarn install
      - name: Build
        run: |
          export TEMP_PUB=$(anchor keys list | grep -oP '.*:\s*\K.*') && sed -i "s/declare_id!(\".*\");/declare_id!(\"$TEMP_PUB\");/g" ./programs/atomic_swap_spl/src/lib.rs
          anchor build
      - name: Run tests
        run: anchor test
